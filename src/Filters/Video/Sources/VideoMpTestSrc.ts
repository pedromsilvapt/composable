import { Filter, FilterStreamRef } from '../../../Filter';
import { Stream } from '../../../Compiler';

/**
  * 14.5 mptestsrc
  * Generate various test patterns, as generated by the MPlayer test filter.
  * 
  * The size of the generated video is fixed, and is 256x256. This source is useful in particular for testing encoding features.
  * 
  * This source accepts the following options:
  */
export class VideoMpTestSrc extends Filter<VideoMpTestSrcParameters> {
    outputs : FilterStreamRef<VideoMpTestSrcParameters, VideoMpTestSrc>[];

    public constructor ( inputs : Stream | Stream[] = [], parameters : VideoMpTestSrcParameters = {} as any ) {
        super( inputs, 'mptestsrc', parameters );
    }
}

export interface VideoMpTestSrcParameters {
    /**
      * Specify the frame rate of the sourced video, as the number of frames generated per second. It has to be a string in the format
      * frame_rate_num/frame_rate_den, an integer number, a floating point number or a valid video frame rate abbreviation. The default value is "25".
      * @aliases r
      */
    rate ?: string | number;
    /**
      * Specify the frame rate of the sourced video, as the number of frames generated per second. It has to be a string in the format
      * frame_rate_num/frame_rate_den, an integer number, a floating point number or a valid video frame rate abbreviation. The default value is "25".
      * @aliasof rate
      */
    r ?: string | number;
    /**
      * Set the duration of the sourced video. See
      * (ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual for the accepted syntax.
      * If not specified, or the expressed duration is negative, the video is supposed to be generated forever.
      * @aliases d
      */
    duration ?: string | number;
    /**
      * Set the duration of the sourced video. See
      * (ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual for the accepted syntax.
      * If not specified, or the expressed duration is negative, the video is supposed to be generated forever.
      * @aliasof duration
      */
    d ?: string | number;
    /**
      * Set the number or the name of the test to perform. Supported tests are:
      * dc_luma
      * dc_chroma
      * freq_luma
      * freq_chroma
      * amp_luma
      * amp_chroma
      * cbp
      * mv
      * ring1
      * ring2
      * all
      * max_frames, m
      * Set the maximum number of frames generated for each test, default value is 30.
      * Default value is "all", which will cycle through the list of all tests.
      * @aliases t
      */
    test ?: string | number;
    /**
      * Set the number or the name of the test to perform. Supported tests are:
      * dc_luma
      * dc_chroma
      * freq_luma
      * freq_chroma
      * amp_luma
      * amp_chroma
      * cbp
      * mv
      * ring1
      * ring2
      * all
      * max_frames, m
      * Set the maximum number of frames generated for each test, default value is 30.
      * Default value is "all", which will cycle through the list of all tests.
      * @aliasof test
      */
    t ?: string | number;

    [key : string] : string | number;
}

/**
  * 14.5 mptestsrc
  * Generate various test patterns, as generated by the MPlayer test filter.
  * 
  * The size of the generated video is fixed, and is 256x256. This source is useful in particular for testing encoding features.
  * 
  * This source accepts the following options:
  */
export function videoMpTestSrc ( inputs : Stream | Stream[] = [], parameters : VideoMpTestSrcParameters = {} as any ) {
    return new VideoMpTestSrc( inputs, parameters );
}